@model project_ilcs.Models.Transaction

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm("Save", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class="control-label col-md-2" for="last-name" id="lbl_mini" name="lbl_mini">
                Countries
            </label>
            <div class="col-md-10">
                <select class="form-control select2" id="Country" name="Country" style="width: 50%;" placeholder="Position">
                    <option value="">Choose Country</option>
                    @if (ViewBag.Countries != null)
                    {
                        foreach (var item in ViewBag.Countries)
                        {
                            <option value="@item.Name">@item.Name</option>
                        }
                    }

                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="last-name" id="lbl_mini" name="lbl_mini">
                Harbors
            </label>
            <div class="col-md-10">
                <select class="form-control select2" id="Harbor" name="Harbor" style="width: 50%;" placeholder="Position">
                    <option value="">Choose Harbor</option>
                    @if (ViewBag.Harbor != null)
                    {
                        foreach (var item in ViewBag.Harbor)
                        {
                            <option value="@item.Cities">@item.Cities</option>
                        }
                    }

                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control", placeholder = "Product Id" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })

                <div class="form-group mt-3">
                    <textarea class="form-control" id="productNameArea" rows="3"></textarea>
                </div>
            </div>
            
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">
                Tax
            </label>
            <div class="col-md-10 d-flex">
                <input class="form-control w-25 mb-3" id="taxValue" type="text" placeholder="Tax" readonly>
            </div>
        </div>

        <div class="form-group">

            <label class="control-label col-md-2">
                Total Tax Price
            </label>
            <div class="col-md-10">              
                @Html.EditorFor(model => model.TotalTaxPrice, new { htmlAttributes = new { @class = "form-control", placeholder = "Price With Tax" } })
                @Html.ValidationMessageFor(model => model.TotalTaxPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" style="color:white; background-color:seagreen;" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    $(document).ready(function () {
        $('#Country').change(function () {
            var selectedCountry = $(this).val();
            $.ajax({
                url: '/Harbors',
                method: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ Name: selectedCountry }), 
                success: function (data) {
                    var harborDropdown = $('#Harbor');
                    harborDropdown.empty();
                    harborDropdown.append('<option value="">Choose Harbor</option>');
                    $.each(data, function (index, item) {
                        harborDropdown.append('<option value="' + item + '">' + item + '</option>');
                    });
                }
            });
        });
    });

    $('#Price').on('input', function () {
        var price = $(this).val();
        var taxPercent = +$('#taxValue').val();
        console.log(taxPercent)
        if (price) {
            var priceWithTax = price * taxPercent/100;
            $('#TotalTaxPrice').val(priceWithTax.toFixed(2)).change();
        } else {
            $('#TotalTaxPrice').val('').change();
        }
    });

    $('#ProductID').change(function () {
        var productId = $(this).val();

        $.ajax({
            url: '/Products/' + productId,
            type: 'GET',
            success: function (data) {
                console.log(data);
                $.each(data, function (index, item) {
                    $('#productNameArea').val(function (i, text) {
                        return text + item.productName + '\n';
                    });
                    $('#taxValue').val(item.tax);
                });
            },
            error: function () {
                alert('Error retrieving product.');
            }
        });
    });
</script>