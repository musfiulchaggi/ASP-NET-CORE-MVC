@model project_ilcs.Models.Transaction

@{
    ViewBag.Title = "Edit Transaction";
}

<h2>Edit</h2>

<form method="put" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="hidden" name="_method" value="PUT">
    <div class="form-horizontal" width="100%">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Harbor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Harbor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Harbor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalTaxPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalTaxPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalTaxPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-success" id="updateButton">Update</button>
            </div>
        </div>
    </div>
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#updateButton').click(function (e) {
            e.preventDefault();
            var id = '@Model.Id';
            if (!id) {
                alert('Invalid id');
                return;
            }
            var updatedTransaction = {
                Id: id,
                Country: $('#Country').val(),
                Harbor: $('#Harbor').val(),
                ProductName: $('#ProductName').val(),
                Price: $('#Price').val(),
                Tax: $('#Tax').val()
            };
            console.log(updatedTransaction);
            $.ajax({
                url: '/ModifyTransaction/' + id,
                type: 'PUT',
                contentType: 'application/json',
                data: JSON.stringify(updatedTransaction),
                success: function (result) {
                    swal("Poof! Your data has been updated!", {
                        icon: "success",
                    });
                },
                error: function (xhr, status, error) {
                    swal("Oops! Something went wrong: " + error, {
                        icon: "error",
                    });
                }
            });
        });
    });
</script>